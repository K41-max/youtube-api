kind: pipeline
type: docker
name: default

steps:
  - name: install
    image: node:16
    pull: if-not-exists
    volumes:
      - name: installcache
        path: /installcache
    commands:
      - yarn install

  - name: test-build
    image: node:16
    pull: if-not-exists
    volumes:
      - name: installcache
        path: /installcache
    commands:
      - yarn build
    when:
      event:
        - pull_request
    depends_on:
      - install

  - name: test
    image: mauriceo/nodejs-mongodb:1.0
    pull: if-not-exists
    volumes:
      - name: installcache
        path: /installcache
    commands:
      - yarn test
    depends_on:
      - install

  - name: publish
    image: plugins/docker
    pull: if-not-exists
    settings:
      repo: mauriceo/viewtube
      compress: true
      tags:
        - latest
        - "0.8.0"
        - "0.8"
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - stable
      event:
        - push
    depends_on:
      - install
      - test

  - name: publish-dev
    image: plugins/docker
    pull: if-not-exists
    settings:
      repo: mauriceo/viewtube
      compress: true
      tags:
        - dev
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - development
      event:
        - push
    depends_on:
      - install
      - test

  - name: notify
    image: appleboy/drone-telegram
    pull: if-not-exists
    settings:
      token:
        from_secret: tg_bot_token
      to: -1001411660806
    when:
      branch:
        - stable
      event:
        - push
      status:
        - success
        - failure

volumes:
  - name: installcache
    temp: {}

trigger:
  branch:
    - stable
    - development
