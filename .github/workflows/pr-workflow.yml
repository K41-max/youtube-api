name: Pull Request

on:
  pull_request:
    branches: ['development']

jobs:
  pr-job:
    strategy:
      matrix:
        command: ['build', 'test', 'lint:client', 'lint:server']

    name: ${{ matrix.command }}
    timeout-minutes: 60
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node.js PR workflow step ${{ matrix.command }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate build metadata
        run: |
          pnpm build:metadata
          echo ./client/buildMetadata.json

      - name: Run ${{ matrix.command }}
        run: NODE_OPTIONS=--max-old-space-size=4096 pnpm run ${{ matrix.command }}

  e2e:
    name: e2e tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node.js PR workflow step ${{ matrix.command }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Install e2e test dependencies
        run: pnpm --filter=./tests install --frozen-lockfile

      - name: Generate build metadata
        run: |
          pnpm build:metadata
          echo ./client/buildMetadata.json

      - name: Prepare docker environment and run e2e tests
        run: pnpm run e2e

      - name: Upload e2e test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: ./tests/cypress/videos/
